Ref: https://www.freecodecamp.org/news/developing-and-deploying-micro-frontends-with-single-spa/

Bestpractices

1. To avoid memory leaks, alway remember to clear the UI elements from unmount function.
2. Use vanilla javascript for the container app.
3. Use customProps to pass auth tokens and other necessary functions
4. Specify a mount container for each app when we register them to avoid the apps load out of order
------------------------------
    Example:
import { registerApplication, start } from "single-spa";
import * as isActive from "./activity-functions";

registerApplication(
  "@thawkin3/single-spa-demo-nav",
  () => System.import("@thawkin3/single-spa-demo-nav"),
  isActive.nav,
  { domElement: document.getElementById('nav-container') }
);

registerApplication(
  "@thawkin3/single-spa-demo-page-1",
  () => System.import("@thawkin3/single-spa-demo-page-1"),
  isActive.page1,
  { domElement: document.getElementById('page-1-container') }
);

registerApplication(
  "@thawkin3/single-spa-demo-page-2",
  () => System.import("@thawkin3/single-spa-demo-page-2"),
  isActive.page2,
  { domElement: document.getElementById('page-2-container') }
);

start();
------------------------------
5. Naming convention to follow for app names - use all lowercase letters and have '-' as seperator, example "single-spa-demo-nav"
6. Use seperate repo for each MFE
7. Maintain a seperate importmap for each environment.
8. Have seperate CI/CD for each MFE app.9. 